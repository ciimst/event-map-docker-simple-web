package com.imst.event.map.hibernate.entity;

import java.sql.Timestamp;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * AlertEvent generated by hbm2java
 */
@Entity
@Table(name = "alert_event", schema = "public")
public class AlertEvent implements java.io.Serializable {

	private Integer id;
	private Alert alert;
	private User user;
	private String dbName;
	private Timestamp createDate;
	private String eventIdDbName;
	private Boolean readState;
	private Event event;
	private String ip;

	public AlertEvent() {
	}

	public AlertEvent(Alert alert, User user, String dbName, Event event) {
		this.alert = alert;
		this.user = user;
		this.dbName = dbName;
		this.event = event;
	}

	public AlertEvent(Alert alert, User user, String dbName, Event event, Timestamp createDate,
			String eventIdDbName, Boolean readState, String ip) {
		this.alert = alert;
		this.user = user;
		this.dbName = dbName;
		this.event = event;
		this.createDate = createDate;
		this.eventIdDbName = eventIdDbName;
		this.readState = readState;
		this.ip = ip;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fk_alert_id", nullable = false)
	public Alert getAlert() {
		return this.alert;
	}

	public void setAlert(Alert alert) {
		this.alert = alert;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fk_user_id", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "db_name", nullable = false, length = 64)
	public String getDbName() {
		return this.dbName;
	}

	public void setDbName(String dbName) {
		this.dbName = dbName;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "event_id", nullable = false)
	public Event getEvent() {
		return this.event;
	}
	
	public void setEvent(Event event) {
		this.event = event;
	}	

	@Column(name = "create_date", length = 29)
	public Timestamp getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Timestamp createDate) {
		this.createDate = createDate;
	}

	@Column(name = "event_id_db_name", length = 128)
	public String getEventIdDbName() {
		return this.eventIdDbName;
	}

	public void setEventIdDbName(String eventIdDbName) {
		this.eventIdDbName = eventIdDbName;
	}

	@Column(name = "read_state")
	@org.hibernate.annotations.ColumnDefault("false")
	public Boolean getReadState() {
		return this.readState;
	}

	public void setReadState(Boolean readState) {
		this.readState = readState;
	}
	
	@Column(name = "ip", nullable = true, length = 64)
	public String getIp() {
		return this.ip;
	}
	
	public void setIp(String ip) {
		this.ip = ip;
	}

}
