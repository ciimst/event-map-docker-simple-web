package com.imst.event.map.hibernate.entity;

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * EventType generated by hbm2java
 */
@Entity
@Table(name = "event_type", schema = "public")
public class EventType implements java.io.Serializable {

	private Integer id;
	private String name;
	private String image;
	private String code;
	private Set<Event> events = new HashSet<Event>(0);
	private Set<Alert> alerts = new HashSet<Alert>(0);
	private String pathData;

	public EventType() {
	}

	public EventType(String name, String image) {
		this.name = name;
		this.image = image;
	}

	public EventType(String name, String image, String code, Set<Event> events, Set<Alert> alerts, String pathData) {
		this.name = name;
		this.image = image;
		this.code = code;
		this.events = events;
		this.alerts = alerts;
		this.pathData = pathData;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name", nullable = false, length = 64)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "image", nullable = false, length = 8192)
	public String getImage() {
		return this.image;
	}

	public void setImage(String image) {
		this.image = image;
	}

	@Column(name = "code", length = 64)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eventType")
	public Set<Event> getEvents() {
		return this.events;
	}

	public void setEvents(Set<Event> events) {
		this.events = events;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "eventType")
	public Set<Alert> getAlerts() {
		return this.alerts;
	}

	public void setAlerts(Set<Alert> alerts) {
		this.alerts = alerts;
	}
	
	@Column(name="path_data", columnDefinition = "TEXT")
	public String getPathData() {
		return pathData;
	}

	public void setPathData(String pathData) {
		this.pathData = pathData;
	}
	
	
	
}
