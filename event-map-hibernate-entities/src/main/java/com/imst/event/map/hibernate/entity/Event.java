package com.imst.event.map.hibernate.entity;

import java.sql.Timestamp;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Event generated by hbm2java
 */
@Entity
@Table(name = "event")
public class Event implements java.io.Serializable {

	private Integer id;
	private EventGroup eventGroup;
	private EventType eventType;
	private String title;
	private String spot;
	private String description;
	private Timestamp eventDate;
	private String country;
	private String city;
	private double latitude;
	private double longitude;
	private String blackListTag;
	private String createUser;
	private Timestamp createDate;
	private Timestamp updateDate;
	private String reservedKey;
	private String reservedType;
	private String reservedId;
	private String reservedLink;
	private Integer userId;
	private Integer groupId;
	private String reserved1;
	private String reserved2;
	private String reserved3;
	private String reserved4;
	private String reserved5;
	private State state;
	
	private Set<EventMedia> eventMedias = new HashSet<EventMedia>(0);
	private Set<EventTag> eventTags = new HashSet<EventTag>(0);
	private Set<AlertEvent> alertEvents = new HashSet<AlertEvent>(0);
	private Set<EventBlackList> eventBLackLists = new HashSet<EventBlackList>(0);

	public Event() {
	}

	public Event(EventGroup eventGroup, EventType eventType, Timestamp eventDate, double latitude, double longitude, String blackListTag, State state) {
		this.eventGroup = eventGroup;
		this.eventType = eventType;
		this.eventDate = eventDate;
		this.latitude = latitude;
		this.longitude = longitude;
		this.blackListTag = blackListTag;
		this.state = state;
	}

	public Event(EventGroup eventGroup, EventType eventType, String title, String spot, String description,
			Timestamp eventDate, String country, String city, double latitude, double longitude, String blackListTag, String createUser,
			Timestamp createDate, Timestamp updateDate, State state, String reservedKey, String reservedType,
			String reservedId, String reservedLink, Integer userId, Integer groupId, Set<EventMedia> eventMedias,
			Set<EventTag> eventTags, String reserved1, String reserved2, String reserved3, String reserved4, String reserved5, Set<EventBlackList> eventBLackLists ) {
		this.eventGroup = eventGroup;
		this.eventType = eventType;
		this.title = title;
		this.spot = spot;
		this.description = description;
		this.eventDate = eventDate;
		this.country = country;
		this.city = city;
		this.latitude = latitude;
		this.longitude = longitude;
		this.blackListTag = blackListTag;
		this.createUser = createUser;
		this.createDate = createDate;
		this.updateDate = updateDate;
		this.state = state;
		this.reservedKey = reservedKey;
		this.reservedType = reservedType;
		this.reservedId = reservedId;
		this.reservedLink = reservedLink;
		this.userId = userId;
		this.groupId = groupId;
		this.eventMedias = eventMedias;
		this.eventTags = eventTags;
		this.reserved1 = reserved1;
		this.reserved2 = reserved2;
		this.reserved3 = reserved3;
		this.reserved4 = reserved4;
		this.reserved5 = reserved5;
		this.eventBLackLists = eventBLackLists;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fk_event_group_id", nullable = false)
	public EventGroup getEventGroup() {
		return this.eventGroup;
	}

	public void setEventGroup(EventGroup eventGroup) {
		this.eventGroup = eventGroup;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fk_event_type_id", nullable = false)
	public EventType getEventType() {
		return this.eventType;
	}

	public void setEventType(EventType eventType) {
		this.eventType = eventType;
	}
	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fk_state_id", nullable = false)
	@org.hibernate.annotations.ColumnDefault("0")
	public State getState() {
		return this.state;
	}

	public void setState(State state) {
		this.state = state;
	}
	

	@Column(name = "title", length = 256)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "spot", length = 512)
	public String getSpot() {
		return this.spot;
	}

	public void setSpot(String spot) {
		this.spot = spot;
	}

	@Column(name = "description", length = 200096)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "event_date", nullable = false, length = 29)
	public Timestamp getEventDate() {
		return this.eventDate;
	}

	public void setEventDate(Timestamp eventDate) {
		this.eventDate = eventDate;
	}

	@Column(name = "country", length = 64)
	public String getCountry() {
		return this.country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	@Column(name = "city", length = 64)
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@Column(name = "latitude", nullable = false, precision = 17, scale = 17)
	public double getLatitude() {
		return this.latitude;
	}

	public void setLatitude(double latitude) {
		this.latitude = latitude;
	}

	@Column(name = "longitude", nullable = false, precision = 17, scale = 17)
	public double getLongitude() {
		return this.longitude;
	}

	public void setLongitude(double longitude) {
		this.longitude = longitude;
	}
	
	@Column(name = "black_list_tag", length = 256)
	public String getBlackListTag() {
		return this.blackListTag;
	}

	public void setBlackListTag(String blackListTag) {
		this.blackListTag = blackListTag;
	}

	@Column(name = "create_user", length = 64)
	public String getCreateUser() {
		return this.createUser;
	}

	public void setCreateUser(String createUser) {
		this.createUser = createUser;
	}

	@Column(name = "create_date", length = 29)
	public Timestamp getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Timestamp createDate) {
		this.createDate = createDate;
	}

	@Column(name = "update_date", length = 29)
	public Timestamp getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Timestamp updateDate) {
		this.updateDate = updateDate;
	}



	@Column(name = "reserved_key", length = 256)
	public String getReservedKey() {
		return this.reservedKey;
	}

	public void setReservedKey(String reservedKey) {
		this.reservedKey = reservedKey;
	}

	@Column(name = "reserved_type", length = 256)
	public String getReservedType() {
		return this.reservedType;
	}

	public void setReservedType(String reservedType) {
		this.reservedType = reservedType;
	}

	@Column(name = "reserved_id", length = 256)
	public String getReservedId() {
		return this.reservedId;
	}

	public void setReservedId(String reservedId) {
		this.reservedId = reservedId;
	}

	@Column(name = "reserved_link", length = 4096)
	public String getReservedLink() {
		return this.reservedLink;
	}

	public void setReservedLink(String reservedLink) {
		this.reservedLink = reservedLink;
	}

	@Column(name = "user_id")
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@Column(name = "group_id")
	public Integer getGroupId() {
		return this.groupId;
	}

	public void setGroupId(Integer groupId) {
		this.groupId = groupId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "event")
	public Set<EventMedia> getEventMedias() {
		return this.eventMedias;
	}

	public void setEventMedias(Set<EventMedia> eventMedias) {
		this.eventMedias = eventMedias;
	}


	@OneToMany(fetch = FetchType.LAZY, mappedBy = "event")
	public Set<EventTag> getEventTags() {
		return this.eventTags;
	}

	public void setEventTags(Set<EventTag> eventTags) {
		this.eventTags = eventTags;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "event")
	public Set<AlertEvent> getAlertEvents(){
		return this.alertEvents;
	}
	
	public void setAlertEvents(Set<AlertEvent> alertEvents) {
		this.alertEvents = alertEvents;
	}

	@Column(name = "reserved_1", length = 500)
	public String getReserved1() {
		return reserved1;
	}

	public void setReserved1(String reserved1) {
		this.reserved1 = reserved1;
	}

	@Column(name = "reserved_2", length = 500)
	public String getReserved2() {
		return reserved2;
	}

	public void setReserved2(String reserved2) {
		this.reserved2 = reserved2;
	}

	@Column(name = "reserved_3", length = 500)
	public String getReserved3() {
		return reserved3;
	}

	public void setReserved3(String reserved3) {
		this.reserved3 = reserved3;
	}

	@Column(name = "reserved_4", length = 500)
	public String getReserved4() {
		return reserved4;
	}

	public void setReserved4(String reserved4) {
		this.reserved4 = reserved4;
	}

	@Column(name = "reserved_5", length = 500)
	public String getReserved5() {
		return reserved5;
	}

	public void setReserved5(String reserved5) {
		this.reserved5 = reserved5;
	}

	
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "event")
	public Set<EventBlackList> getEventBlackLists() {
		return this.eventBLackLists;
	}

	public void setEventBlackLists(Set<EventBlackList> eventBLackLists) {
		this.eventBLackLists = eventBLackLists;
	}
	

}
