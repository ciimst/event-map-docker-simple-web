package com.imst.event.map.hibernate.entity;

import java.sql.Timestamp;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "username"))
public class User implements java.io.Serializable {

	private Integer id;
	private Profile profile;
	private String username;
	private String name;
	private Timestamp createDate;
	private Boolean state;
	private String password;
	private Timestamp updateDate;
	private Boolean isDbUser;
	private Integer providerUserId;
	private Set<AlertEvent> alertEvents = new HashSet<AlertEvent>(0);
	
	private Set<Alert> alerts = new HashSet<Alert>(0);
	private Set<UserGroupId> userGroupIds = new HashSet<UserGroupId>(0);
	private Set<UserUserId> userUserIds = new HashSet<UserUserId>(0);
	private Set<UserLayerPermission> userLayerPermissions = new HashSet<UserLayerPermission>(0);
	private Set<UserEventGroupPermission> userEventGroupPermissions = new HashSet<UserEventGroupPermission>(0);

	public User() {
	}

	public User(Profile profile, String username, String name, String password) {
		this.profile = profile;
		this.username = username;
		this.name = name;
		this.password = password;
	}

	public User(Profile profile, String username, String name, Timestamp createDate, Boolean state, String password,
			Timestamp updateDate, Boolean isDbUser, Set<AlertEvent> alertEvents, 
			Set<Alert> alerts, Set<UserGroupId> userGroupIds,
			Set<UserUserId> userUserIds,
			Set<UserLayerPermission> userLayerPermissions, Set<UserEventGroupPermission> userEventGroupPermissions) {
		this.profile = profile;
		this.username = username;
		this.name = name;
		this.createDate = createDate;
		this.state = state;
		this.password = password;
		this.updateDate = updateDate;
		this.isDbUser = isDbUser;
		this.alertEvents = alertEvents;		
		this.alerts = alerts;		
		this.userGroupIds = userGroupIds;
		this.userUserIds = userUserIds;		
		this.userLayerPermissions = userLayerPermissions;
		this.userEventGroupPermissions = userEventGroupPermissions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fk_profile_id", nullable = false)
	public Profile getProfile() {
		return this.profile;
	}

	public void setProfile(Profile profile) {
		this.profile = profile;
	}

	@Column(name = "username", unique = true, nullable = false, length = 64)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "name", nullable = false, length = 256)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "create_date", length = 29)
	public Timestamp getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Timestamp createDate) {
		this.createDate = createDate;
	}

	@Column(name = "state")
	@org.hibernate.annotations.ColumnDefault("true")
	public Boolean getState() {
		return this.state;
	}

	public void setState(Boolean state) {
		this.state = state;
	}

	@Column(name = "password", nullable = false, length = 64)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "update_date", length = 29)
	public Timestamp getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Timestamp updateDate) {
		this.updateDate = updateDate;
	}

	@Column(name = "is_db_user")
	@org.hibernate.annotations.ColumnDefault("false")
	public Boolean getIsDbUser() {
		return this.isDbUser;
	}

	public void setIsDbUser(Boolean isDbUser) {
		this.isDbUser = isDbUser;
	}
	
	@Column(name = "provider_user_id")
	public Integer getProviderUserId() {
		return providerUserId;
	}

	public void setProviderUserId(Integer providerUserId) {
		this.providerUserId = providerUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<AlertEvent> getAlertEvents() {
		return this.alertEvents;
	}

	public void setAlertEvents(Set<AlertEvent> alertEvents) {
		this.alertEvents = alertEvents;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Alert> getAlerts() {
		return this.alerts;
	}

	public void setAlerts(Set<Alert> alerts) {
		this.alerts = alerts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<UserGroupId> getUserGroupIds() {
		return this.userGroupIds;
	}

	public void setUserGroupIds(Set<UserGroupId> userGroupIds) {
		this.userGroupIds = userGroupIds;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<UserUserId> getUserUserIds() {
		return this.userUserIds;
	}

	public void setUserUserIds(Set<UserUserId> userUserIds) {
		this.userUserIds = userUserIds;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<UserLayerPermission> getUserLayerPermissions() {
		return this.userLayerPermissions;
	}

	public void setUserLayerPermissions(Set<UserLayerPermission> userLayerPermissions) {
		this.userLayerPermissions = userLayerPermissions;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<UserEventGroupPermission> getUserEventGroupPermissions() {
		return this.userEventGroupPermissions;
	}

	public void setUserEventGroupPermissions(Set<UserEventGroupPermission> userEventGroupPermissions) {
		this.userEventGroupPermissions = userEventGroupPermissions;
	}

}
