package com.imst.event.map.hibernate.entity;

import java.sql.Timestamp;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Layer generated by hbm2java
 */
@Entity
@Table(name = "layer", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class Layer implements java.io.Serializable {

	private Integer id;
	private String name;
	private Timestamp createDate;
	private Timestamp updateDate;
	private Boolean state;
	private Boolean isTemp;
	private String guid;
	private Set<Alert> alerts = new HashSet<Alert>(0);
	private Set<GeoLayer> geoLayers = new HashSet<GeoLayer>(0);
	private Set<UserLayerPermission> userLayerPermissions = new HashSet<UserLayerPermission>(0);
	private Set<LayerExport> layerExports = new HashSet<LayerExport>(0);
	private Set<MapAreaGroup> mapAreaGroups = new HashSet<MapAreaGroup>(0);
	private Set<EventGroup> eventGroups = new HashSet<EventGroup>(0);
	private Set<UserSettings> userSettings = new HashSet<UserSettings>(0);

	public Layer() {
	}

	public Layer(String name) {
		this.name = name;
	}

	public Layer(String name, Timestamp createDate, Timestamp updateDate, Boolean state, Boolean isTemp, String guid,
			Set<Alert> alerts, Set<GeoLayer> geoLayers, Set<UserLayerPermission> userLayerPermissions,
			Set<LayerExport> layerExports, Set<MapAreaGroup> mapAreaGroups, Set<EventGroup> eventGroups, Set<UserSettings> userSettings) {
		this.name = name;
		this.createDate = createDate;
		this.updateDate = updateDate;
		this.state = state;
		this.isTemp = isTemp;
		this.guid = guid;
		this.alerts = alerts;
		this.geoLayers = geoLayers;
		this.userLayerPermissions = userLayerPermissions;
		this.layerExports = layerExports;
		this.mapAreaGroups = mapAreaGroups;
		this.eventGroups = eventGroups;
		this.userSettings = userSettings;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name", unique = true, nullable = false, length = 64)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "create_date", length = 29)
	public Timestamp getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Timestamp createDate) {
		this.createDate = createDate;
	}

	@Column(name = "update_date", length = 29)
	public Timestamp getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Timestamp updateDate) {
		this.updateDate = updateDate;
	}

	@Column(name = "state")
	@org.hibernate.annotations.ColumnDefault("true")
	public Boolean getState() {
		return this.state;
	}

	public void setState(Boolean state) {
		this.state = state;
	}

	@Column(name = "is_temp")
	@org.hibernate.annotations.ColumnDefault("false")
	public Boolean getIsTemp() {
		return this.isTemp;
	}

	public void setIsTemp(Boolean isTemp) {
		this.isTemp = isTemp;
	}

	@Column(name = "guid", length = 64)
	public String getGuid() {
		return this.guid;
	}

	public void setGuid(String guid) {
		this.guid = guid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "layer")
	public Set<Alert> getAlerts() {
		return this.alerts;
	}

	public void setAlerts(Set<Alert> alerts) {
		this.alerts = alerts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "layer")
	public Set<GeoLayer> getGeoLayers() {
		return this.geoLayers;
	}

	public void setGeoLayers(Set<GeoLayer> geoLayers) {
		this.geoLayers = geoLayers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "layer")
	public Set<UserLayerPermission> getUserLayerPermissions() {
		return this.userLayerPermissions;
	}

	public void setUserLayerPermissions(Set<UserLayerPermission> userLayerPermissions) {
		this.userLayerPermissions = userLayerPermissions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "layer")
	public Set<LayerExport> getLayerExports() {
		return this.layerExports;
	}

	public void setLayerExports(Set<LayerExport> layerExports) {
		this.layerExports = layerExports;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "layer")
	public Set<MapAreaGroup> getMapAreaGroups() {
		return this.mapAreaGroups;
	}

	public void setMapAreaGroups(Set<MapAreaGroup> mapAreaGroups) {
		this.mapAreaGroups = mapAreaGroups;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "layer")
	public Set<EventGroup> getEventGroups() {
		return this.eventGroups;
	}

	public void setEventGroups(Set<EventGroup> eventGroups) {
		this.eventGroups = eventGroups;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "layer")
	public Set<UserSettings> getUserSettings() {
		return this.userSettings;
	}

	public void setUserSettings(Set<UserSettings> userSettings) {
		this.userSettings = userSettings;
	}

}
